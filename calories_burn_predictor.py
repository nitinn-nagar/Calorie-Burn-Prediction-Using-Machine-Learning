# -*- coding: utf-8 -*-
"""Calories_burn_predictor

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dmuF5FB3O-yZwd0dK0gEhyyFQ10rc_if
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

calories = pd.read_csv('/content/calories.csv')
exercise = pd.read_csv('/content/exercise.csv')

calories

exercise.head()

calories_data = pd.concat([exercise, calories['Calories']],axis=1)

calories_data.head()

calories_data.shape

calories_data.isnull().sum()

calories_data.describe()

sns.set()

calories_data.replace({"Gender":{'male':0,'female':1}}, inplace = True)

sns.countplot(calories_data['Gender'])

sns.displot(calories_data['Height'])

sns.displot(calories_data['Weight'])

corelation = calories_data.corr()

corelation = calories_data.corr()

plt.figure(figsize=(10,10))
sns.heatmap(corelation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap= 'Blues')

calories_data.replace({"Gender":{'male':0,'female':1}}, inplace = True)

calories_data.head()

X = calories_data.drop(columns=['User_ID', 'Calories'], axis=1)
Y = calories_data['Calories']
X

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

model = XGBRegressor()

model.fit(X_train, Y_train)

test_data_prediction = model.predict(X_test)

test_data_prediction

mae = metrics.mean_absolute_error(Y_test, test_data_prediction)

print("Mean absolute error", mae)

input_data = (1,30,166.0,60.0,30.0,94.0,40.3)
data_to_nparray = np.array(input_data)
reshape_data = data_to_nparray.reshape(1,-1)
predict = model.predict(reshape_data)
print("Calories brunt :", predict)